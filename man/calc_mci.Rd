% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation_measures.R
\name{calc_mci}
\alias{calc_mci}
\title{Model Correction Inconcistency (MCI)}
\usage{
calc_mci(
  model,
  model_correction,
  time_p = NA,
  p = 2,
  margins_controls = list(mult = NULL, xmin = NaN, xmax = NaN, bw = NA, deg = 2, type =
    "c"),
  ...
)
}
\arguments{
\item{model}{\link{data.frame}\cr
Simulation climate data from the climate model.}

\item{model_correction}{\link{data.frame}\cr
Simulation climate data \code{model} from the climate model corrected by an
arbitrary bias correction method.}

\item{time_p}{\link{date}\cr
An optional vector with a time point for each observation/row in the
(corrected) model data. Default is NA which indicates that no temporal
information are given.}

\item{p}{\code{numeric(1)}\cr
The power of the global MCI. Default is 2.}

\item{margins_controls}{\link{list}\cr
A list with arguments to be passed to \code{\link[kde1d:kde1d]{kde1d::kde1d()}}. Currently, there can be
\itemize{
\item \code{mult} numeric vector of length one or d; all bandwidths for marginal
kernel density estimation are multiplied with \code{mult}. Defaults to
\code{log(1 + d)} where \code{d} is the number of climate variables.
\item \code{xmin} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{xmax} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{bw} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{deg} numeric vector of length one or d; \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{type} character vector of length one or d; must be one of
c, cont, continuous for continuous variables, one of d, disc, discrete for
discrete integer variables, or one of zi, zinfl, zero-inflated for
zero-inflated variables.
}}

\item{...}{\cr
Arguments are passed to \link[rvinecopulib:vinecop]{rvinecopulib::vinecop} to specify the structure of
vines and margins. Note that the ellipsis of observed and model data are
specified with the same arguments.}
}
\value{
\link{data.table}\cr
Contains the points of time if supplied in \code{time_p} and the respective
local MCI. Note that the last time step is truncated while derivation. The
attribute global contains the global MCI, which is the mean over all MCI
scores. The estimated multivariate distribution of model and correction are
placed in attributes in of the returned object.
}
\description{
MCI provides a score to quantify how invasive the correction method
transformed the multivariate temporal rank structure of the model after
correcting the model bias. Therefore, this model compares non-excedance
probabilities of an event t before and after bias correction. A noninvaseive
method preserves the model-specific rank structure.
}
\examples{
#' \dontrun{
#' data("climate")
#' climate_sub = lapply(climate, function(x) x[, c("pr", "tas", "dew")])
#' margins_controls = list(xmin = c(0, NaN, NaN), type = c("zi", "c", "c"))
#' mp_vbc = vine_correct(climate_sub$oc, climate_sub$mc, climate_sub$mp,
#'                       margins_controls = margins_controls,
#'                       family_set = "tll", trunc_lvl = Inf)
#' summary(attr(mp_vbc, "vine_oc"))
#' summary(attr(mp_vbc, "vine_mp"))
#' calc_mci(climate_sub$mp, mp_vbc, time = climate$mp$time,
#'          margins_controls = margins_controls,
#'          family_set = "tll", trunc_lvl = Inf)
#' rbind(
#'  uncorrected = calc_wasserstein(climate_sub$oc, climate_sub$mp),
#'  corrected = calc_wasserstein(climate_sub$oc, mp_vbc),
#' )
#' }
}
