% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vine_correct.R
\name{vine_correct}
\alias{vine_correct}
\title{Correct zero inflated climate model simulations via vine copulas}
\usage{
vine_correct(
  oc,
  mc,
  mp,
  var_names = colnames(oc),
  zero_inf = rep(FALSE, times = ncol(oc)),
  margins_controls = list(mult = NULL, xmin = NaN, xmax = NaN, bw = NA, deg = 2),
  digits = NA,
  oc_struc = FALSE,
  return_mch = FALSE,
  ...
)
}
\arguments{
\item{oc}{\link{data.frame}\cr
Measured (and interpolated) observations during calibration period.}

\item{mc}{\link{data.frame}\cr
Simulation data from a climate model during calibration period.}

\item{mp}{\link{data.frame}\cr
Simulation data from a climate model during projection period.}

\item{var_names}{\link{character}\cr
Names of corrected climate data. Defaults to the column names of the
observed data \code{oc}.}

\item{zero_inf}{\link{double}\cr
A vector of the length of climate variables to correct. The n-th element in
the vector indicates if the n-th climate variable is zero inflated.
\itemize{
\item \code{TRUE} indicates a zero inflated climate variable
\item \code{FALSE} indicates a non-zero inflated climate variable
Defaults to \code{FALSE} for all climate variables.
}}

\item{margins_controls}{\link{list}\cr
A list with arguments to be passed to \code{\link[kde1d:kde1d]{kde1d::kde1d()}}. Currently, there can be
\itemize{
\item \code{mult} numeric vector of length one or d; all bandwidths for marginal
kernel density estimation are multiplied with \code{mult}. Defaults to
\code{log(1 + d)} where \code{d} is the number of climate variables.
\item \code{xmin} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{xmax} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{bw} numeric vector of length d; see \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
\item \code{deg} numeric vector of length one or d; \code{\link[kde1d:kde1d]{kde1d::kde1d()}}.
}}

\item{digits}{\code{integer(1)}\cr
The corrected data will be rounded to the specified digit length after
correction. Defaults to \code{NA} where no rounding is performed.}

\item{oc_struc}{\code{logical(1)}\cr
If true, the vine structure of the measured data \code{oc} is used for the
vine structure of the projection period data. Defaults to \code{FALSE}.}

\item{return_mch}{\code{logical(1)}\cr
If true, the function returns the corrected model data from the projection
period before delta mapping. Defaults to \code{FALSE}.}

\item{...}{\cr
Arguments are passed to \link[rvinecopulib:vinecop]{rvinecopulib::vinecop} to specify the structure of
vines and margins. Note that the ellipsis of observed and model data are
specified with the same arguments.}
}
\value{
\link{data.frame}\cr
The corrected projection period data in \code{mp}. Additionally the data frame
contains the attributes
\itemize{
\item \code{vine_oc} the vine copula for the measured data \code{oc}.
\item \code{vine_mp} the vine copula for the model data from projection period \code{mp}.
}
}
\description{
The multivariate distribution functions of model and observed are estimated
via vine copula estimation (see \link[rvinecopulib:vine]{rvinecopulib::vine}).
The quantiles are then mapped via (inverse) Rosenblatt transformation from
the model to the observed distribution. The corrected data are mapped to the
projection domain via delta mapping. The steps are equivalent to those in
univariate bias correction via quantile delta mapping.
}
\examples{
#' \dontrun{
#' library(MBC)
#' data("climate")
#' climate_sub = lapply(climate, function(x) x[, c("pr", "tas", "dew")])
#' margins_controls = list(xmin = c(0, NaN, NaN))
#' zero_inf = c(TRUE, FALSE, FALSE)
#' mp_vbc = vine_correct(climate_sub$oc, climate_sub$mc, climate_sub$mp,
#'                       margins_controls = margins_controls,
#'                       zero_inf = zero_inf, family_set = "tll",
#'                       trunc_lvl = Inf)
#' summary(attr(mp_vbc, "vine_oc"))
#' summary(attr(mp_vbc, "vine_mp"))
#' mp_ubc = mapply(QDM, o.c = climate_sub$oc, m.c = climate_sub$mc,
#'                 m.p = climate_sub$mp, ratio = c(TRUE, FALSE, FALSE),
#'                 trace = c(0.01, Inf, Inf), SIMPLIFY = FALSE)
#' mp_ubc = do.call(cbind.data.frame, lapply(mp_ubc, function(var) var$mhat.p))
#' mp_mbcn = data.frame(MBCn(o.c = climate_sub$oc, m.c = climate_sub$mc,
#'                           m.p = climate_sub$mp, ratio.seq = c(TRUE, FALSE, FALSE),
#'                           trace = c(0.01, Inf, Inf), silent = TRUE)$mhat.p)
#' colnames(mp_mbcn) = colnames(mp_vbc)
#' c(
#'   "ubc" = attr(calc_mci(climate_sub$mp, mp_ubc,
#'                         margins_controls = margins_controls,
#'                         zero_inf = zero_inf, family_set = "tll",
#'                         trunc_lvl = Inf), "global"),
#'   "vbc" = attr(calc_mci(climate_sub$mp, mp_vbc,
#'                         margins_controls = margins_controls,
#'                         zero_inf = zero_inf, family_set = "tll",
#'                         trunc_lvl = Inf), "global"),
#'   "mbcn" = attr(calc_mci(climate_sub$mp, mp_mbcn,
#'                          margins_controls = margins_controls,
#'                          zero_inf = zero_inf, family_set = "tll",
#'                          trunc_lvl = Inf), "global")
#' )
#'
#' list(
#'   "ubc" = calc_wasserstein(climate_sub$oc, mp_ubc),
#'   "vbc" = calc_wasserstein(climate_sub$oc, mp_vbc),
#'   "mbcn" = calc_wasserstein(climate_sub$oc, mp_mbcn)
#' )
#' }
}
\references{
Czado, C. (2019). Analyzing dependent data with vine copulas. Lecture Notes
in Statistics, Springer, 222.

Rosenblatt, M. (1952). Remarks on a multivariate transformation. The annals
of mathematical statistics, 23(3), 470-472.

Cannon, A.J., S.R. Sobie, and T.Q. Murdock, (2015). Bias correction of
simulated precipitation by quantile mapping: How well do methods preserve
relative changes in quantiles and extremes? Journal of Climate, 28:6938-6959.
}
